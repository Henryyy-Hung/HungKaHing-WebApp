import "../globals.css";
import styles from "./layout.module.css";
import localFont from 'next/font/local';
import {NextIntlClientProvider} from 'next-intl';
import {getMessages, getTranslations, unstable_setRequestLocale} from 'next-intl/server';
import {getLangDir} from 'rtl-detect';
import {supportedLocales} from "@/i18n/configs";
import TopNavigationBar from "@/components/shared/TopNavigationBar";
import Footer from "@/components/shared/Footer";
import {globby} from "globby";

const satoshiVariable = localFont({ src: '../../assets/fonts/Satoshi/Satoshi-Variable.woff2' });

const generateStaticParams = async () => {
    return supportedLocales.map(locale => ({locale}));
}

const generateMetadata = async ({params: {locale}}) => {
    const t = await getTranslations({locale, namespace: 'common.metadata'});
    return {
        title: t('title'),
        description: "Generated by create next app",
    };
}

const loadAllCss = async () => {
    const pathPrefix = 'src/app/';
    const pathSuffix = '.module.css';
    // 获取所有的 CSS 模块路径
    const paths = await globby(`${pathPrefix}**/*${pathSuffix}`);
    // 动态加载所有的 CSS 模块
    for (let path of paths) {
        const truncatedPath = path.slice(pathPrefix.length, -pathSuffix.length);
        (await import(`src/app/${truncatedPath}.module.css`)).default;
    }
};

const Layout = async ({ children, params: {locale} }) => {

    // 确保在服务端渲染时，locale 与请求的 locale 一致
    unstable_setRequestLocale(locale);
    // 获取当前 locale 的翻译资源
    const messages = await getMessages();
    // 获取当前 locale 的文本方向
    const direction = getLangDir(locale);
    // 加载所有的 CSS 模块
    await loadAllCss();

    return (
        <html lang={locale} dir={direction}>
            <body className={satoshiVariable.className}>
                <NextIntlClientProvider messages={messages}>
                    <header className={styles.header}>
                        <TopNavigationBar locale={locale}/>
                    </header>
                    <main className={styles.main}>
                        {children}
                    </main>
                    <footer className={styles.footer}>
                        <Footer locale={locale}/>
                    </footer>
                </NextIntlClientProvider>
            </body>
        </html>
    );
};

export {
    generateMetadata,
    generateStaticParams,
};

export default Layout;
